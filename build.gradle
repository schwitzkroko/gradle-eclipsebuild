buildscript  {
   repositories {
      // local .m2 folder in user directory
      // mavenLocal()
      maven {
         url gradleRepositoryUrl
      }
      maven {
         url gradleRemoteRepositoryUrl
      }
    }
}

plugins {
   id 'java-gradle-plugin'
   id 'groovy'
   id 'eclipse'
   id 'idea'
   id 'maven' // for local install
   id 'maven-publish' 
   // id 'com.gradle.plugin-publish'
   id 'com.gradle.build-scan' version '2.1'
}
// apply plugin: 'maven-publish-auth'

wrapper {
   // gradleVersion = '5.2.1'
   // distributionType = Wrapper.DistributionType.ALL
   distributionUrl = "https://services.gradle.org/distributions/gradle-5.2.1-all.zip"
}


group = 'org.eclipse.buildship.build'
version = '1.0.0-SNAPSHOT'

afterEvaluate {
   logger.quiet '------------------------------------------------'
   logger.quiet project.group + ":" + archivesBaseName + ":" + project.version
   logger.quiet '------------------------------------------------'
}


repositories {
   // local .m2 folder in user directory
   // mavenLocal()
   maven {
      url gradleRemoteRepositoryUrl
   }
}

dependencies {

   // compile fileTree(dir: 'libs', include: ['*.jar'])
   // libs/org.eclipse.core.runtime_3.9.100.v20131218-1515.jar
   // libs/org.eclipse.equinox.common_3.6.200.v20130402-1505.jar
   // libs/org.eclipse.jdt.junit.core_3.7.300.v20140409-1618.jar
   compile('org.eclipse.jdt:org.eclipse.jdt.junit.core:3.8.0') {
      exclude module: 'org.eclipse.osgi' // too young
   }
   // libs/org.eclipse.osgi_3.10.1.v20140909-1633.jar
   compile 'org.eclipse.tycho:org.eclipse.osgi:3.13.0.v20171204-1916'
   // libs/org.eclipse.osgi.compatibility.state_1.0.1.v20140709-1414.jar
   compile 'org.eclipse.tycho:org.eclipse.osgi.compatibility.state:1.0.100.v20150402-1551'
   
   compile 'nu.studer:java-ordered-properties:1.0.1'
   compile 'org.apache.maven:maven-ant-tasks:2.1.3'
   compile 'bcel:bcel:5.1'
}

sourceSets {
   main {
      java { srcDirs = [] } // no source dirs for the java compiler
      groovy { srcDirs = ["src/main/groovy"] } // compile everything with groovy
   }
}


//pluginBundle {
//   website = 'https://github.com/schwitzkroko/gradle-eclipsebuild'
//   vcsUrl = 'https://github.com/schwitzkroko/gradle-eclipsebuild'
//
//   description = 'Plugin set to build Eclipse plugins in a multi-module build.'
//   tags = ['gradle-plugin','eclipse-ide','eclipse-plugin','build','gradle','gradle-build']
//}

gradlePlugin {
   plugins {
      UpdateSitePlugin {
         id = project.group + '.' + 'update-site-plugin'
         implementationClass = 'eclipsebuild.UpdateSitePlugin'
      }
      TestBundlePlugin {
         id = project.group + '.' + 'test-bundle-plugin'
         implementationClass = 'eclipsebuild.TestBundlePlugin'
      }
      FeaturePlugin {
         id = project.group + '.' + 'feature-plugin'
         implementationClass = 'eclipsebuild.FeaturePlugin'
      }
      BundlePlugin {
         id = project.group + '.' + 'bundle-plugin'
         implementationClass = 'eclipsebuild.BundlePlugin'
      }
      BuildDefinitionPlugin {
         id = project.group + '.' + 'build-definition-plugin'
         implementationClass = 'eclipsebuild.BuildDefinitionPlugin'
      }
   }
}

task sourcesJar(type: Jar) {
   description = 'generate a jar file with the source code'

   classifier = 'sources'
   from sourceSets.main.allSource
}

// NOTE: The 'artifacts' block is mandatory for usage of the task 'install' (since Gradle 4.8.1; but not for 4.6).
artifacts {
   archives sourcesJar
}

//publishing {
//   publications {
//      mavenJava(MavenPublication) {
//         from components.java
//
//         // NOTE: list additional artificats here to be able to use the task 'publishToMavenLocal' which is equal to 'install'
//         // resolves the artifact tasks
//         artifact sourcesJar
//      }
//   }
//}

eclipse {
   classpath {
      downloadJavadoc = true
      downloadSources = true
   }
}

buildScan {
   termsOfServiceUrl = 'https://gradle.com/terms-of-service'
   termsOfServiceAgree = 'yes'
}
